#include <font/CMapName.h>

#include <algorithm>

using namespace kernel::font;

namespace {
  CMapNameInfo const cmapCollection[] = {
      {CMapName_GB_EUC_H,         "Adobe", "GB1", 0},      
      {CMapName_GB_EUC_V,         "Adobe", "GB1", 0},
      {CMapName_GBpc_EUC_V,       "Adobe", "GB1", 0},
      {CMapName_GBpc_EUC_H,       "Adobe", "GB1", 0},
      {CMapName_GBK_EUC_V,        "Adobe", "GB1", 2},
      {CMapName_GBK_EUC_H,        "Adobe", "GB1", 2},
      {CMapName_GBKp_EUC_V,       "Adobe", "GB1", 2},
      {CMapName_GBKp_EUC_H,       "Adobe", "GB1", 2},
      {CMapName_GBK2K_V,          "Adobe", "GB1", 4},
      {CMapName_GBK2K_H,          "Adobe", "GB1", 4},
      {CMapName_UniGB_UCS2_V,     "Adobe", "GB1", 4},
      {CMapName_UniGB_UCS2_H,     "Adobe", "GB1", 4},
      {CMapName_UniGB_UTF16_V,    "Adobe", "GB1", 4},
      {CMapName_UniGB_UTF16_H,    "Adobe", "GB1", 4},
      {CMapName_B5pc_V,           "Adobe", "CNS1", 0},
      {CMapName_B5pc_H,           "Adobe", "CNS1", 0},
      {CMapName_HKscs_B5_V,       "Adobe", "CNS1", 3},
      {CMapName_HKscs_B5_H,       "Adobe", "CNS1", 3},
      {CMapName_ETen_B5_V,        "Adobe", "CNS1", 0},
      {CMapName_ETen_B5_H,        "Adobe", "CNS1", 0},
      {CMapName_ETenms_B5_V,      "Adobe", "CNS1", 0},
      {CMapName_ETenms_B5_H,      "Adobe", "CNS1", 0},
      {CMapName_CNS_EUC_V,        "Adobe", "CNS1", 0},
      {CMapName_CNS_EUC_H,        "Adobe", "CNS1", 0},
      {CMapName_UniCNS_UCS2_V,    "Adobe", "CNS1", 3},
      {CMapName_UniCNS_UCS2_H,    "Adobe", "CNS1", 3},
      {CMapName_UniCNS_UTF16_V,   "Adobe", "CNS1", 4},
      {CMapName_UniCNS_UTF16_H,   "Adobe", "CNS1", 4},
      {CMapName_83pv_RKSJ_H,      "Adobe", "Japan1", 1},
      {CMapName_90ms_RKSJ_V,      "Adobe", "Japan1", 2},
      {CMapName_90ms_RKSJ_H,      "Adobe", "Japan1", 2},
      {CMapName_90msp_RKSJ_V,     "Adobe", "Japan1", 2},
      {CMapName_90msp_RKSJ_H,     "Adobe", "Japan1", 2},
      {CMapName_90pv_RKSJ_H,      "Adobe", "Japan1", 1},
      {CMapName_Add_RKSJ_V,       "Adobe", "Japan1", 1},
      {CMapName_Add_RKSJ_H,       "Adobe", "Japan1", 1},
      {CMapName_EUC_V,            "Adobe", "Japan1", 1},
      {CMapName_EUC_H,            "Adobe", "Japan1", 1},
      {CMapName_Ext_RKSJ_V,       "Adobe", "Japan1", 2},
      {CMapName_Ext_RKSJ_H,       "Adobe", "Japan1", 2},
      {CMapName_V,                "Adobe", "Japan1", 1},
      {CMapName_H,                "Adobe", "Japan1", 1},
      {CMapName_UniJIS_UCS2_V,    "Adobe", "Japan1", 4},
      {CMapName_UniJIS_UCS2_H,    "Adobe", "Japan1", 4},
      {CMapName_UniJIS_UCS2_HW_V, "Adobe", "Japan1", 4},
      {CMapName_UniJIS_UCS2_HW_H, "Adobe", "Japan1", 4},
      {CMapName_UniJIS_UTF16_V,   "Adobe", "Japan1", 5},
      {CMapName_UniJIS_UTF16_H,   "Adobe", "Japan1", 5},
      {CMapName_KSC_EUC_V,        "Adobe", "Korea1", 0},
      {CMapName_KSC_EUC_H,        "Adobe", "Korea1", 0},
      {CMapName_KSCms_UHC_V,      "Adobe", "Korea1", 1},
      {CMapName_KSCms_UHC_H,      "Adobe", "Korea1", 1},
      {CMapName_KSCms_UHC_HW_V,   "Adobe", "Korea1", 1},
      {CMapName_KSCms_UHC_HW_H,   "Adobe", "Korea1", 1},
      {CMapName_KSCpc_EUC_H,      "Adobe", "Korea1", 0},
      {CMapName_UniKS_UCS2_V,     "Adobe", "Korea1", 1},
      {CMapName_UniKS_UCS2_H,     "Adobe", "Korea1", 1},
      {CMapName_UniKS_UTF16_V,    "Adobe", "Korea1", 2},
      {CMapName_UniKS_UTF16_H,    "Adobe", "Korea1", 2},
      {CMapName_Identity_V,       "Adobe", "Identity", 0},
      {CMapName_Identity_H,       "Adobe", "Identity", 0},
      {CMapName_Identity_UCS,     "Adobe", "UCS", 0},
      {CMapName_UNKNOWN,          "", "", 0}};

  char const *CMapNameList[] = {
      "GB-EUC-H",
      "GB-EUC-V",
      "GBpc-EUC-H",
      "GBpc-EUC-V",
      "GBK-EUC-H",
      "GBK-EUC-V",
      "GBKp-EUC-H",
      "GBKp-EUC-V",
      "GBK2K-H",
      "GBK2K-V",
      "UniGB-UCS2-H",
      "UniGB-UCS2-V",
      "UniGB-UTF16-H",
      "UniGB-UTF16-V",
      "B5pc-H",
      "B5pc-V",
      "HKscs-B5-H",
      "HKscs-B5-V",
      "ETen-B5-H",
      "ETen-B5-V",
      "ETenms-B5-H",
      "ETenms-B5-V",
      "CNS-EUC-H",
      "CNS-EUC-V",
      "UniCNS-UCS2-H",
      "UniCNS-UCS2-V",
      "UniCNS-UTF16-H",
      "UniCNS-UTF16-V",
      "83pv-RKSJ-H",
      "90ms-RKSJ-H",
      "90ms-RKSJ-V",
      "90msp-RKSJ-H",
      "90msp-RKSJ-V",
      "90pv-RKSJ-H",
      "Add-RKSJ-H",
      "Add-RKSJ-V",
      "EUC-H",
      "EUC-V",
      "Ext-RKSJ-H",
      "Ext-RKSJ-V",
      "H",
      "V",
      "UniJIS-UCS2-H",
      "UniJIS-UCS2-V",
      "UniJIS-UCS2-HW-H",
      "UniJIS-UCS2-HW-V",
      "UniJIS-UTF16-H",
      "UniJIS-UTF16-V",
      "KSC-EUC-H",
      "KSC-EUC-V",
      "KSCms-UHC-H",
      "KSCms-UHC-V",
      "KSCms-UHC-HW-H",
      "KSCms-UHC-HW-V",
      "KSCpc-EUC-H",
      "UniKS-UCS2-H",
      "UniKS-UCS2-V",
      "UniKS-UTF16-H",
      "UniKS-UTF16-V",
      "Identity-H",
      "Identity-V",
      "Adobe-Identity-UCS",
      "UNKNOWN"
  };

}

namespace kernel{ namespace font{

  CMapNameInfo getCMapNameInfo(CMapName cmapName){
      auto elem = std::find_if(cmapCollection, cmapCollection + sizeof(cmapCollection) / sizeof(CMapNameInfo) - 1, [cmapName](CMapNameInfo const &value) -> bool {return value.mCmapName == cmapName;});
      return *elem;
  }

  char const *cmapNameToString(CMapName cmapName){
    return CMapNameList[cmapName];
  }

}}
